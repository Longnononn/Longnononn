-- Script by Long Dzz - Client-side features for Fluxus (Optimized for Dead Rail with Updated Link4M Key System)

--// SERVICES
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer

--// CONFIG (Client-side)
local ATTACK_RADIUS = 25 -- Radius for targeting enemies
local FAST_COOLDOWN = 0.1 -- Fast attack cooldown
local NORMAL_COOLDOWN = 0.5 -- Normal attack cooldown
local DEFAULT_WALK_SPEED = 16 -- Default walk speed
local DEFAULT_FLY_SPEED = 50 -- Default fly speed
local MAX_FLY_SPEED = 150 -- Maximum fly speed
local MIN_FLY_SPEED = 20 -- Minimum fly speed
local VALID_KEY = "f3vcgtyuio" -- Provided key
local LINK4M_URL = "https://link4m.com/rLBYSp" -- Provided Link4M URL [cite: 1, 2]

--// VARIABLES
local FastAttack, AoEEnabled, AimEnabled, SpeedEnabled, NoClipEnabled, FlyEnabled, ESPEnabled, InfiniteJumpEnabled = false, false, false, false, false, false, false, false [cite: 2]
local menuVisible = false -- Menu hidden until key is validated [cite: 2]
local canAttack = true [cite: 2]
local customWalkSpeed = DEFAULT_WALK_SPEED [cite: 2]
local customFlySpeed = DEFAULT_FLY_SPEED [cite: 2]
local keyValidated = false -- Tracks if key is correct [cite: 2]

--// FUNCTIONS

-- Get nearest target for aiming
local function getNearestTarget()
    local char = player.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return end
    local closest, dist = nil, math.huge
    for _, model in pairs(workspace:GetDescendants()) do
        if model:IsA("Model") and model ~= char then
            local hum = model:FindFirstChildOfClass("Humanoid")
            local hrp = model:FindFirstChild("HumanoidRootPart")
            if hum and hum.Health > 0 and hrp then
                local d = (hrp.Position - root.Position).Magnitude
                if d < ATTACK_RADIUS and d < dist then [cite: 4]
                    dist = d
                    closest = hrp
                end
            end
        end
    end
    return closest [cite: 5]
end

-- Attack function (simulate tool activation)
local function attack()
    -- Removed AoEEnabled from this initial check so FastAttack and AimEnabled can work independently.
    if not keyValidated or not canAttack then return end [cite: 5]
    canAttack = false
    local char = player.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return end

    local targetPos = root.Position
    if AimEnabled then
        local target = getNearestTarget()
        if target then
            targetPos = target.Position [cite: 6]
        end
    end

    -- Simulate tool activation
    local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
    if tool then
        tool:Activate()
    end

    task.wait(FastAttack and FAST_COOLDOWN or NORMAL_COOLDOWN)
    canAttack = true
end

-- Tool setup for auto-attack
local tool = Instance.new("Tool", player.Backpack)
tool.RequiresHandle = false
tool.Name = "RangedTool"
tool.Activated:Connect(attack)

UIS.TouchTap:Connect(function(touchPositions, gameProcessed)
    if not keyValidated or gameProcessed or tool.Parent ~= player.Character then return end [cite: 7]
    tool:Activate()
end)

-- Speed adjustment
local function updateSpeed()
    if not keyValidated then return end
    local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.WalkSpeed = SpeedEnabled and customWalkSpeed or DEFAULT_WALK_SPEED
    end
end

-- Connect updateSpeed to CharacterAdded to ensure speed is set when character spawns
player.CharacterAdded:Connect(function(char)
    -- Wait for the Humanoid to exist in the new character
    local hum = char:WaitForChild("Humanoid")
    if hum then
        updateSpeed() -- Apply speed after Humanoid is available
    end
end)


-- NoClip
RunService.Stepped:Connect(function()
    if not keyValidated or not NoClipEnabled then return end
    local char = player.Character
    if char then
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") then [cite: 8]
                part.CanCollide = false
            end
        end
    end
end)

-- Fly (CFrame-based - may cause rubberbanding due to server correction)
local flyConnection
local function toggleFly(state)
    if not keyValidated then return end
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end [cite: 9]

    if state then
        hum.PlatformStand = true -- Disable default movement [cite: 9]
        flyConnection = RunService.RenderStepped:Connect(function(delta)
            local moveDirection = Vector3.new(0, 0, 0)
            local cam = workspace.CurrentCamera
            local forward = cam.CFrame.LookVector [cite: 9]
            local right = cam.CFrame.RightVector [cite: 10]
            local up = Vector3.new(0, 1, 0)

            if UIS:IsKeyDown(Enum.KeyCode.W) then
                moveDirection = moveDirection + forward
            end
            if UIS:IsKeyDown(Enum.KeyCode.S) then
                moveDirection = moveDirection - forward [cite: 11]
            end
            if UIS:IsKeyDown(Enum.KeyCode.D) then
                moveDirection = moveDirection + right [cite: 11]
            end
            if UIS:IsKeyDown(Enum.KeyCode.A) then
                moveDirection = moveDirection - right [cite: 12]
            end
            if UIS:IsKeyDown(Enum.KeyCode.Space) then
                moveDirection = moveDirection + up [cite: 12]
            end
            if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
                moveDirection = moveDirection - up [cite: 12]
            end

            if moveDirection.Magnitude > 0 then [cite: 13]
                moveDirection = moveDirection.Unit * customFlySpeed * delta [cite: 13]
                hrp.CFrame = hrp.CFrame + moveDirection [cite: 13]
            end
        end)
    else
        hum.PlatformStand = false [cite: 14]
        if flyConnection then
            flyConnection:Disconnect() [cite: 14]
            flyConnection = nil
        end
    end
end

-- Infinite Jump (may cause rubberbanding due to server correction)
local function toggleInfiniteJump(state)
    if not keyValidated then return end [cite: 14]
    if state then
        -- Disconnect previous JumpRequest to avoid multiple connections if toggled multiple times
        if InfiniteJumpEnabled then return end -- Prevent multiple connections
        
        UIS.JumpRequest:Connect(function()
            if InfiniteJumpEnabled and player.Character then
                local hum = player.Character:FindFirstChildOfClass("Humanoid")
                if hum then [cite: 15]
                    hum:ChangeState(Enum.HumanoidStateType.Jumping) [cite: 15]
                end
            end
        end)
    else
        -- No direct way to disconnect a specific anonymous connection without storing it.
        -- For robust toggling, you'd usually store the connection in a table and disconnect specifically.
        -- For now, toggling it off simply stops the UI.JumpRequest logic from executing.
    end
end

-- ESP
local function toggleESP(state)
    if not keyValidated then return end [cite: 15]
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") and obj:FindFirstChild("HumanoidRootPart") then [cite: 16]
            local highlight = obj:FindFirstChildOfClass("Highlight")
            if state then
                if not highlight then
                    local h = Instance.new("Highlight", obj)
                    h.FillColor = Color3.new(1, 0, 0) [cite: 17]
                    h.OutlineColor = Color3.new(1, 1, 1) [cite: 17]
                end
            else
                if highlight then highlight:Destroy() end
            end
        end
    end
end

-- GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.ResetOnSpawn = false

-- Key Input GUI
local keyFrame = Instance.new("Frame", gui)
keyFrame.Size = UDim2.new(0, 300, 0, 180)
keyFrame.Position = UDim2.new(0.5, -150, 0.5, -90)
keyFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
keyFrame.BorderSizePixel = 0

local keyTitle = Instance.new("TextLabel", keyFrame)
keyTitle.Size = UDim2.new(1, 0, 0, 40)
keyTitle.BackgroundTransparency = 1
keyTitle.Text = "Nhập Key để Mở Script"
keyTitle.Font = Enum.Font.FredokaOne
keyTitle.TextSize = 16
keyTitle.TextColor3 = Color3.new(1, 1, 1)

local keyInput = Instance.new("TextBox", keyFrame)
keyInput.Size = UDim2.new(0, 200, 0, 30)
keyInput.Position = UDim2.new(0.5, -100, 0, 50)
keyInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
keyInput.Text = ""
keyInput.PlaceholderText = "Nhập key (e.g.,)..."
keyInput.Font = Enum.Font.Gotham
keyInput.TextSize = 14
keyInput.TextColor3 = Color3.new(1, 1, 1)

local checkKeyButton = Instance.new("TextButton", keyFrame)
checkKeyButton.Size = UDim2.new(0, 120, 0, 30)
checkKeyButton.Position = UDim2.new(0, 30, 0, 90) [cite: 19]
checkKeyButton.Text = "Check Key"
checkKeyButton.Font = Enum.Font.GothamBold
checkKeyButton.TextSize = 12
checkKeyButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
checkKeyButton.TextColor3 = Color3.new(1, 1, 1)

local getLinkKeyButton = Instance.new("TextButton", keyFrame)
getLinkKeyButton.Size = UDim2.new(0, 120, 0, 30)
getLinkKeyButton.Position = UDim2.new(0, 150, 0, 90)
getLinkKeyButton.Text = "Get Link Key"
getLinkKeyButton.Font = Enum.Font.GothamBold
getLinkKeyButton.TextSize = 12
getLinkKeyButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
getLinkKeyButton.TextColor3 = Color3.new(1, 1, 1)

local keyMessage = Instance.new("TextLabel", keyFrame)
keyMessage.Size = UDim2.new(1, 0, 0, 30)
keyMessage.Position = UDim2.new(0, 0, 0, 130)
keyMessage.BackgroundTransparency = 1
keyMessage.Text = "Visit " .. LINK4M_URL .. " to get the key"
keyMessage.Font = Enum.Font.Gotham
keyMessage.TextSize = 12
keyMessage.TextColor3 = Color3.new(1, 1, 1)

-- Main Menu GUI
local title = Instance.new("TextLabel", gui)
title.Size = UDim2.new(0, 250, 0, 35)
title.Position = UDim2.new(0, 10, 0, 10) [cite: 20]
title.BackgroundTransparency = 1
title.Text = "Script by: Long Dzz (Dead Rail)"
title.Font = Enum.Font.FredokaOne
title.TextScaled = true
title.TextColor3 = Color3.new(1, 1, 1)
title.Visible = false
task.spawn(function()
    while true do
        local t = tick()
        title.TextColor3 = Color3.fromRGB(
            math.floor(math.abs(math.sin(t)) * 255),
            math.floor(math.abs(math.sin(t + 2)) * 255),
            math.floor(math.abs(math.sin(t + 4)) * 255)
        ) [cite: 21]
        task.wait(0.1)
    end
end)

local functionFrame = Instance.new("Frame", gui)
functionFrame.Size = UDim2.new(0, 260, 0, 320)
functionFrame.Position = UDim2.new(0, 10, 0, 50)
functionFrame.BackgroundTransparency = 1
functionFrame.BorderSizePixel = 0
functionFrame.Visible = false

local toggleMenuButton = Instance.new("TextButton", gui)
toggleMenuButton.Size = UDim2.new(0, 100, 0, 30)
toggleMenuButton.Position = UDim2.new(0, 270, 0, 15)
toggleMenuButton.Text = "Bật/Tắt Menu"
toggleMenuButton.Font = Enum.Font.GothamBold
toggleMenuButton.TextSize = 12
toggleMenuButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleMenuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleMenuButton.BorderSizePixel = 0
toggleMenuButton.Visible = false

toggleMenuButton.MouseButton1Click:Connect(function()
    if not keyValidated then return end
    menuVisible = not menuVisible
    functionFrame.Visible = menuVisible
end)

-- Button Generator
local function createToggle(name, pos, color, callback)
    local btn = Instance.new("TextButton", functionFrame) [cite: 22]
    btn.Size = UDim2.new(0, 120, 0, 40)
    btn.Position = pos
    btn.Text = name
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.BorderSizePixel = 0
    local state = false
    btn.MouseButton1Click:Connect(function()
        if not keyValidated then return end
        state = not state
        TweenService:Create(btn, TweenInfo.new(0.3), {BackgroundColor3 = state and color or Color3.fromRGB(40, 40, 40)}):Play() [cite: 23]
        callback(state)
    end)
end

local function createSpeedButton(name, pos, callback)
    local btn = Instance.new("TextButton", functionFrame)
    btn.Size = UDim2.new(0, 60, 0, 30)
    btn.Position = pos
    btn.Text = name
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 12
    btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.BorderSizePixel = 0
    btn.MouseButton1Click:Connect(function()
        if not keyValidated then return end [cite: 24]
        callback()
    end)
end

-- Key System Logic
checkKeyButton.MouseButton1Click:Connect(function()
    if keyInput.Text == VALID_KEY then
        keyValidated = true
        keyFrame.Visible = false
        title.Visible = true
        functionFrame.Visible = true
        toggleMenuButton.Visible = true
        keyMessage.Text = "Key hợp lệ!" [cite: 25]
        keyMessage.TextColor3 = Color3.new(0, 1, 0) [cite: 25]
        task.wait(1)
        keyMessage.Text = ""
    else
        keyMessage.Text = "Key không hợp lệ!" [cite: 25]
        keyMessage.TextColor3 = Color3.new(1, 0, 0) [cite: 25]
    end
end)

getLinkKeyButton.MouseButton1Click:Connect(function()
    keyMessage.Text = "Đã mở link: " .. LINK4M_URL
    keyMessage.TextColor3 = Color3.new(1, 1, 1)
    print("Please visit " .. LINK4M_URL .. " to get the key")
end)

-- Add GUI Toggles
createToggle("Đánh nhanh", UDim2.new(0, 10, 0, 10), Color3.fromRGB(0, 255, 0), function(s) FastAttack = s end) [cite: 26]
createToggle("Đánh tầm xa", UDim2.new(0, 10, 0, 60), Color3.fromRGB(0, 170, 255), function(s) AoEEnabled = s end) [cite: 26]
createToggle("Aim gần nhất", UDim2.new(0, 10, 0, 110), Color3.fromRGB(255, 170, 0), function(s) AimEnabled = s end) [cite: 26]
createToggle("Tăng tốc", UDim2.new(0, 130, 0, 10), Color3.fromRGB(255, 0, 255), function(s) SpeedEnabled = s updateSpeed() end) [cite: 26]
createToggle("Xuyên tường", UDim2.new(0, 130, 0, 60), Color3.fromRGB(255, 255, 0), function(s) NoClipEnabled = s end) [cite: 26]
createToggle("Bay", UDim2.new(0, 130, 0, 110), Color3.fromRGB(0, 255, 255), function(s) FlyEnabled = s toggleFly(s) end) [cite: 26]
createToggle("Hiện quái", UDim2.new(0, 10, 0, 160), Color3.fromRGB(255, 0, 0), function(s) ESPEnabled = s toggleESP(s) end) [cite: 26]
createToggle("Nhảy vô hạn", UDim2.new(0, 130, 0, 160), Color3.fromRGB(0, 255, 128), function(s) InfiniteJumpEnabled = s toggleInfiniteJump(s) end) [cite: 27]

-- Fly Speed Controls
createSpeedButton("+ Tốc độ bay", UDim2.new(0, 10, 0, 210), function()
    customFlySpeed = math.min(customFlySpeed + 10, MAX_FLY_SPEED)
    print("Tốc độ bay: " .. customFlySpeed)
end)
createSpeedButton("- Tốc độ bay", UDim2.new(0, 80, 0, 210), function()
    customFlySpeed = math.max(customFlySpeed - 10, MIN_FLY_SPEED)
    print("Tốc độ bay: " .. customFlySpeed)
end)

-- Speed Label
local speedLabel = Instance.new("TextLabel", functionFrame)
speedLabel.Size = UDim2.new(0, 120, 0, 30)
speedLabel.Position = UDim2.new(0, 130, 0, 210)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Tốc độ: " .. customWalkSpeed
speedLabel.Font = Enum.Font.GothamBold
speedLabel.TextSize = 12
speedLabel.TextColor3 = Color3.new(1, 1, 1)

-- Speed Adjustment Buttons
createSpeedButton("+ Tốc độ chạy", UDim2.new(0, 10, 0, 250), function()
    customWalkSpeed = math.min(customWalkSpeed + 4, 64) [cite: 28]
    speedLabel.Text = "Tốc độ: " .. customWalkSpeed
    if SpeedEnabled then updateSpeed() end
end)
createSpeedButton("- Tốc độ chạy", UDim2.new(0, 80, 0, 250), function()
    customWalkSpeed = math.max(customWalkSpeed - 4, DEFAULT_WALK_SPEED) [cite: 28]
    speedLabel.Text = "Tốc độ: " .. customWalkSpeed
    if SpeedEnabled then updateSpeed() end
end)

print("✅ Client-side script with updated Link4M key system loaded for Fluxus (Dead Rail)!")
