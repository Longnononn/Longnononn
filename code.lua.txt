-- Dead Rail Script by Long dzz
-- Includes: Speed, Noclip, AutoPickup, Silent Aim, ESP Zombie, Third Person View

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = nil
local humanoid = nil
local hrp = nil
local camera = Workspace.CurrentCamera

-- Biến mới cho góc nhìn thứ ba
local currentCameraOffset = Vector3.new(0, 5, 15) -- Offset mặc định ban đầu (X, Y, Z)
local minZoomDistance = 5  -- Khoảng cách zoom tối thiểu
local maxZoomDistance = 30 -- Khoảng cách zoom tối đa
local zoomSpeed = 2        -- Tốc độ zoom khi cuộn chuột

-- Biến mới cho xoay camera tự do
local cameraCFrame = camera.CFrame -- Lưu trữ CFrame hiện tại của camera khi bật chế độ scriptable
local rotationSpeed = 0.2 -- Tốc độ xoay camera
local cameraSmoothness = 0.2 -- Độ mượt của camera (0.01 đến 1, càng nhỏ càng mượt) - có thể dùng cho Lerp nếu muốn camera không quá "nhạy"

-- Hàm cập nhật tham chiếu nhân vật và áp dụng lại các tính năng
local function updateCharacterReferences()
	character = player.Character
	if not character then
		character = player.CharacterAdded:Wait()
	end
	humanoid = character:WaitForChild("Humanoid")
	hrp = character:WaitForChild("HumanoidRootPart")

	-- Áp dụng lại tốc độ nếu đang bật
	if speedEnabled then
		humanoid.WalkSpeed = 30
	else
		humanoid.WalkSpeed = 16
	end

	-- Thiết lập CameraType
	if thirdPersonEnabled then
		camera.CameraType = Enum.CameraType.Scriptable
		-- Khởi tạo cameraCFrame khi nhân vật hồi sinh hoặc khi lần đầu bật tính năng
		cameraCFrame = CFrame.new(hrp.Position) * CFrame.Angles(0, math.rad(player.Character.HumanoidRootPart.Orientation.Y), 0) * CFrame.new(currentCameraOffset)
	else
		camera.CameraType = Enum.CameraType.Custom
	end
end

-- Kết nối sự kiện khi nhân vật được thêm vào (hồi sinh)
player.CharacterAdded:Connect(updateCharacterReferences)
-- Gọi lần đầu để khởi tạo khi script chạy
updateCharacterReferences()

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DeadRailUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Credit
local creditLabel = Instance.new("TextLabel")
creditLabel.Size = UDim2.new(0, 160, 0, 25)
creditLabel.Position = UDim2.new(0, 10, 0, 10)
creditLabel.BackgroundTransparency = 1
creditLabel.Text = "script by Long dzz"
creditLabel.TextColor3 = Color3.new(1, 1, 1)
creditLabel.Font = Enum.Font.Gotham
creditLabel.TextScaled = true
creditLabel.Parent = screenGui

-- Toggle button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 40, 0, 40)
toggleBtn.Position = UDim2.new(0, 10, 0, 45)
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
toggleBtn.Text = "+"
toggleBtn.TextScaled = true
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBlack
toggleBtn.Parent = screenGui
Instance.new("UICorner", toggleBtn)

-- Main panel
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 160, 0, 210)
mainFrame.Position = UDim2.new(0, 60, 0, 45)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.Visible = false
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame)

-- Feature toggles
local speedEnabled = false
local noclipEnabled = false
local autoAimEnabled = false
local thirdPersonEnabled = false

-- Speed button
local speedBtn = Instance.new("TextButton")
speedBtn.Size = UDim2.new(1, -20, 0, 30)
speedBtn.Position = UDim2.new(0, 10, 0, 10)
speedBtn.BackgroundColor3 = Color3.fromRGB(255, 150, 0)
speedBtn.Text = "Speed: OFF"
speedBtn.TextScaled = true
speedBtn.Font = Enum.Font.GothamBold
speedBtn.TextColor3 = Color3.new(1, 1, 1)
speedBtn.Parent = mainFrame
Instance.new("UICorner", speedBtn)

speedBtn.MouseButton1Click:Connect(function()
	speedEnabled = not speedEnabled
	if humanoid then humanoid.WalkSpeed = speedEnabled and 30 or 16 end
	speedBtn.Text = "Speed: " .. (speedEnabled and "ON" or "OFF")
	speedBtn.BackgroundColor3 = speedEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(255, 150, 0)
end)

-- Noclip button
local noclipBtn = Instance.new("TextButton")
noclipBtn.Size = UDim2.new(1, -20, 0, 30)
noclipBtn.Position = UDim2.new(0, 10, 0, 50)
noclipBtn.BackgroundColor3 = Color3.fromRGB(150, 0, 255)
noclipBtn.Text = "Noclip: OFF"
noclipBtn.TextScaled = true
noclipBtn.Font = Enum.Font.GothamBold
noclipBtn.TextColor3 = Color3.new(1, 1, 1)
noclipBtn.Parent = mainFrame
Instance.new("UICorner", noclipBtn)

noclipBtn.MouseButton1Click:Connect(function()
	noclipEnabled = not noclipEnabled
	noclipBtn.Text = "Noclip: " .. (noclipEnabled and "ON" or "OFF")
	noclipBtn.BackgroundColor3 = noclipEnabled and Color3.fromRGB(0, 200, 255) or Color3.fromRGB(150, 0, 255)
end)

-- Silent Aim button
local autoAimBtn = Instance.new("TextButton")
autoAimBtn.Size = UDim2.new(1, -20, 0, 30)
autoAimBtn.Position = UDim2.new(0, 10, 0, 90)
autoAimBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
autoAimBtn.Text = "Silent Aim: OFF"
autoAimBtn.TextScaled = true
autoAimBtn.Font = Enum.Font.GothamBold
autoAimBtn.TextColor3 = Color3.new(1, 1, 1)
autoAimBtn.Parent = mainFrame
Instance.new("UICorner", autoAimBtn)

autoAimBtn.MouseButton1Click:Connect(function()
	autoAimEnabled = not autoAimEnabled
	autoAimBtn.Text = "Silent Aim: " .. (autoAimEnabled and "ON" or "OFF")
	autoAimBtn.BackgroundColor3 = autoAimEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
end)

-- Third Person button
local thirdPersonBtn = Instance.new("TextButton")
thirdPersonBtn.Size = UDim2.new(1, -20, 0, 30)
thirdPersonBtn.Position = UDim2.new(0, 10, 0, 130)
thirdPersonBtn.BackgroundColor3 = Color3.fromRGB(0, 100, 255)
thirdPersonBtn.Text = "Third Person: OFF"
thirdPersonBtn.TextScaled = true
thirdPersonBtn.Font = Enum.Font.GothamBold
thirdPersonBtn.TextColor3 = Color3.new(1, 1, 1)
thirdPersonBtn.Parent = mainFrame
Instance.new("UICorner", thirdPersonBtn)

thirdPersonBtn.MouseButton1Click:Connect(function()
	thirdPersonEnabled = not thirdPersonEnabled
	if thirdPersonEnabled then
		camera.CameraType = Enum.CameraType.Scriptable
		UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
		-- Khởi tạo cameraCFrame khi bật chế độ
		if hrp then
			-- Khởi tạo camera phía sau và hơi cao hơn nhân vật, hướng về phía trước nhân vật
			cameraCFrame = CFrame.new(hrp.Position) * CFrame.Angles(0, math.rad(hrp.Orientation.Y), 0) * CFrame.new(currentCameraOffset)
		else
			cameraCFrame = camera.CFrame -- Giữ nguyên nếu không tìm thấy hrp (trường hợp hiếm)
		end
	else
		camera.CameraType = Enum.CameraType.Custom
		UserInputService.MouseBehavior = Enum.MouseBehavior.Default
	end
	thirdPersonBtn.Text = "Third Person: " .. (thirdPersonEnabled and "ON" or "OFF")
	thirdPersonBtn.BackgroundColor3 = thirdPersonEnabled and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(0, 100, 255)
end)

-- Toggle GUI
toggleBtn.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
end)

--- **CÁC TÍNH NĂNG CHÍNH** ---

-- Xử lý Zoom camera khi cuộn chuột và Xoay camera khi di chuyển chuột
UserInputService.InputChanged:Connect(function(input, gameProcessedEvent)
	if thirdPersonEnabled then
		if input.UserInputType == Enum.UserInputType.MouseWheel then
			-- Điều chỉnh khoảng cách zoom theo trục Z cục bộ của camera
			local zoomAmount = -input.Position.Z * zoomSpeed
			local newPosition = cameraCFrame.Position + cameraCFrame.LookVector * zoomAmount

			-- Tính toán khoảng cách từ vị trí mới đến HumanoidRootPart để giới hạn zoom
			if hrp then
				local distToHRP = (newPosition - hrp.Position).Magnitude
				if distToHRP >= minZoomDistance and distToHRP <= maxZoomDistance then
					cameraCFrame = CFrame.new(newPosition) * cameraCFrame.Rotation
				end
			else
				-- Nếu không có hrp, chỉ di chuyển camera mà không giới hạn
				cameraCFrame = CFrame.new(newPosition) * cameraCFrame.Rotation
			end
			
		elseif input.UserInputType == Enum.UserInputType.MouseMovement and not gameProcessedEvent then
			-- Xoay camera khi di chuyển chuột
			local deltaX = -input.Delta.X * rotationSpeed -- Yaw (ngang)
			local deltaY = -input.Delta.Y * rotationSpeed -- Pitch (dọc)

			-- Áp dụng Yaw (xoay quanh trục Y thế giới)
			cameraCFrame = CFrame.new(cameraCFrame.Position) * CFrame.Angles(0, deltaX, 0) * cameraCFrame.Rotation

			-- Áp dụng Pitch (xoay quanh trục X cục bộ của camera) và giới hạn góc
			local _, currentYaw, currentRoll = cameraCFrame:ToOrientation() -- Lấy các góc hiện tại
			local newPitch = currentYaw + deltaY -- Note: ToOrientation returns (Roll, Yaw, Pitch) or (X, Y, Z) sometimes depending on CFrame.Angles order. We want to apply to local X axis.
			
			-- Correct way to apply local pitch rotation while preserving other rotations
			local lookVector = cameraCFrame.LookVector
			local rightVector = cameraCFrame.RightVector
			local upVector = cameraCFrame.UpVector
			
			-- Calculate new pitch
			local currentPitchAngle = math.asin(-lookVector.Y) -- Calculate pitch from lookVector's Y component
			local desiredPitchAngle = math.clamp(currentPitchAngle + deltaY, math.rad(-80), math.rad(80))
			
			-- Rotate around the right vector
			cameraCFrame = CFrame.new(cameraCFrame.Position) * CFrame.fromMatrix(
				cameraCFrame.Position, 
				cameraCFrame.RightVector, 
				cameraCFrame.UpVector, 
				cameraCFrame.LookVector
			) * CFrame.Angles(desiredPitchAngle - currentPitchAngle, 0, 0)
		end
	end
end)


-- RunService effects (Cập nhật vị trí camera và Noclip)
RunService.Stepped:Connect(function()
	-- Noclip
	if noclipEnabled and character then
		for _, part in ipairs(character:GetDescendants()) do
			if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" and part.CanCollide then
				part.CanCollide = false
			end
		end
	end

	-- Third Person Camera (tự do)
	if thirdPersonEnabled and hrp then
		local desiredCFrame = cameraCFrame

		-- Xử lý tránh vật cản cho camera tự do:
		-- Bắn tia từ vị trí của nhân vật đến vị trí mong muốn của camera.
		-- Nếu có vật cản, đẩy camera lùi lại để tránh vật cản đó.
		local rayParams = RaycastParams.new()
		rayParams.FilterDescendantsInstances = { character }
		rayParams.FilterType = Enum.RaycastFilterType.Exclude

		local directionToCamera = desiredCFrame.Position - hrp.Position
		local rayLength = directionToCamera.Magnitude
		local rayDirection = directionToCamera.Unit * rayLength

		local result = Workspace:Raycast(hrp.Position, rayDirection, rayParams)

		if result then
			-- Nếu có vật cản, đặt camera tại điểm va chạm, lùi lại một chút
			-- và giữ nguyên hướng xoay của camera
			desiredCFrame = CFrame.new(result.Position - rayDirection.Unit * 2) * cameraCFrame.Rotation
		end
		
		-- Cập nhật CFrame của camera.
		-- Dùng Lerp để làm mượt chuyển động nếu camera bị đẩy ra khỏi vật cản.
		-- Có thể điều chỉnh cameraSmoothness hoặc bỏ Lerp nếu muốn phản hồi tức thì.
		camera.CFrame = camera.CFrame:Lerp(desiredCFrame, cameraSmoothness)
	end
end)

--- **Auto Pickup** ---
spawn(function()
	while task.wait(0.1) do
		pcall(function()
			if not hrp then return end -- Đảm bảo hrp tồn tại
			for _, item in ipairs(Workspace:GetDescendants()) do
				if item:IsA("BasePart") and item.Name:lower():find("pickup") and (item.Position - hrp.Position).Magnitude < 10 then
					firetouchinterest(hrp, item, 0)
					task.wait()
					firetouchinterest(hrp, item, 1)
				end
			end
		end)
	end
end)

--- **ESP for zombies** ---
local function createESP(part)
	if not part or not part:IsA("BasePart") or part:FindFirstChild("BoxESP") then return end
	if not part.Parent or not part.Parent:IsA("Model") or not part.Parent:FindFirstChildOfClass("Humanoid") then return end

	local box = Instance.new("BoxHandleAdornment")
	box.Name = "BoxESP"
	box.Adornee = part
	box.AlwaysOnTop = true
	box.ZIndex = 5
	box.Size = part.Size + Vector3.new(0.1, 0.1, 0.1)
	box.Color3 = Color3.fromRGB(255, 0, 0)
	box.Transparency = 0.4
	box.Parent = part
end

-- Tạo ESP cho các đối tượng đã tồn tại
for _, obj in ipairs(Workspace:GetDescendants()) do
	if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") and obj ~= character then
		local head = obj:FindFirstChild("Head") or obj:FindFirstChildWhichIsA("BasePart")
		if head then createESP(head) end
	end
end

-- Tạo ESP cho các đối tượng mới được thêm vào
Workspace.DescendantAdded:Connect(function(obj)
	if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") and obj ~= character then
		task.wait(0.2) -- Đợi một chút để model được tải hoàn chỉnh
		local head = obj:FindFirstChild("Head") or obj:FindFirstChildWhichIsA("BasePart")
		if head then createESP(head) end
	end
end)

--- **Silent Aim Hook (Đã cải tiến cho mục tiêu đa dạng)** ---
local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
	local args = { ... }
	local method = getnamecallmethod()
	if method == "Raycast" and autoAimEnabled then
		-- Đảm bảo đủ số lượng đối số và loại đối số phù hợp
		if type(args[2]) == "userdata" and type(args[3]) == "userdata" then
			local origin = args[2]
			local direction = args[3]
			local closestTargetPart = nil
			local closestDistance = math.huge -- Khởi tạo khoảng cách rất lớn

			-- Hàm kiểm tra xem một BasePart có phải là mục tiêu hợp lệ không
			local function isValidTarget(part)
				if not part:IsA("BasePart") or not part.Parent or not part.Parent:IsA("Model") then return false end
				local parentModel = part.Parent
				
				-- Bỏ qua nhân vật của người chơi
				if parentModel == character then return false end 
				
				local targetHumanoid = parentModel:FindFirstChildOfClass("Humanoid")
				-- Kiểm tra xem có Humanoid và còn sống không
				if targetHumanoid and targetHumanoid.Health > 0 then
					return true
				end
				-- Có thể thêm các điều kiện khác ở đây cho "mục tiêu đa dạng" hơn
				-- Ví dụ: if parentModel.Name == "SomeTargetObject" then return true end
				-- Hoặc: if part.CanCollide and part.Transparency < 0.5 and part.Name ~= "Baseplate" then return true end
				return false
			end

			-- Duyệt qua tất cả descendants trong Workspace để tìm mục tiêu
			for _, descendant in ipairs(Workspace:GetDescendants()) do
				if isValidTarget(descendant) then
					local targetPosition = descendant.Position
					local distanceToTarget = (targetPosition - origin).Magnitude

					if distanceToTarget < closestDistance then
						closestDistance = distanceToTarget
						closestTargetPart = descendant
					end
				end
			end
			
			-- Nếu tìm thấy mục tiêu gần nhất, điều chỉnh hướng Raycast
			if closestTargetPart then
				args[3] = (closestTargetPart.Position - origin).Unit * direction.Magnitude
				return old(self, unpack(args))
			end
		end
	end
	return old(self, ...)
end)

setreadonly(mt, true)
